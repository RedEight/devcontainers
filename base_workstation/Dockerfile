#-------------------------------------------------------------------------------------------------------------
# Copyright (c) Steven Tobias
#-------------------------------------------------------------------------------------------------------------

# Pick any base image, but if you select node, skip installing node. ðŸ˜Š
FROM ubuntu

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# This Dockerfile adds a non-root user with sudo access. Use the "remoteUser"
# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs
# will be updated to match your local UID/GID (when using the dockerFile property).
# See https://aka.ms/vscode-remote/containers/non-root-user for details.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID
# Set to false to skip installing zsh and Oh My ZSH!
ARG INSTALL_ZSH="true"

# Location and expected SHA for common setup script - SHA generated on release
ARG COMMON_SCRIPT_SOURCE="https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh"
ARG COMMON_SCRIPT_SHA="dev-mode"


# Configure apt and install packages
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
    #
    # Verify git, required tools installed
    && apt-get install -y \
    git \
    wget \
    openssh-client \
    sshpass \
    less \
    iproute2 \
    curl \
    procps \
    unzip \
    apt-transport-https \
    ca-certificates \
    gnupg-agent \
    software-properties-common \
    python python-pip python-setuptools zsh git unzip less groff \
    libssl-dev libffi-dev python3 python3-dev python3-pip \
    lsb-release 2>&1 \
    #
    # install zsh and common vscode components.
    && wget -q -O /tmp/common-setup.sh $COMMON_SCRIPT_SOURCE \
    && if [ "$COMMON_SCRIPT_SHA" != "dev-mode" ]; then echo "$COMMON_SCRIPT_SHA /tmp/common-setup.sh" | sha256sum -c - ; fi \
    && /bin/bash /tmp/common-setup.sh "$INSTALL_ZSH" "$USERNAME" "$USER_UID" "$USER_GID" \
    && rm /tmp/common-setup.sh \
    && pip3 install --upgrade pip \
    # Install Ansible
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*


# UTILS
RUN  curl -LO https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep_11.0.2_amd64.deb -k && \
    sudo dpkg -i ripgrep_11.0.2_amd64.deb


## Terraform
RUN wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip && \
    unzip terraform_0.12.24_linux_amd64.zip && \
    mv terraform /usr/local/bin/

## OPA
RUN wget https://github.com/open-policy-agent/opa/releases/download/v0.19.1/opa_linux_amd64 && chmod +x opa_linux_amd64  && mv opa_linux_amd64 /usr/local/bin/opa

## Python
COPY requirements.txt .
RUN pip install -r requirements.txt
# Install deps for ansible

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog
ENV PYTHONWARNINGS="ignore:Unverified HTTPS request"

